AWSTemplateFormatVersion: '2010-09-09'
Description: >
  - Cloudformation template for media exchange core.

Metadata:

  License:
    Description: |
      Copyright 2020 Amazon.com Inc. or its affiliates. All Rights Reserved.

      Permission is hereby granted free of charge to any person obtaining a copy of this
      software and associated documentation files (the Software) to deal in the Software
      without restriction including without limitation the rights to use copy modify
      merge publish distribute sublicense and/or sell copies of the Software and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND EXPRESS OR IMPLIED
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER LIABILITY WHETHER IN AN ACTION
      OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  AWS::cloudformation::Interface:
    ParameterGroups:
      -
        Label:
          default: Deployment Configuration
        Parameters:
          - Environment

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev

Outputs:
  EventBusName:
    Description: Event Bus Name
    Value:
      Ref: EventBus
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-events

  LogBucketName:
    Description: Logging Bucket Name
    Value:
      Ref: ExchangeLogBucket
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-logs


Resources:

  #bucket for storing S3 Access Logs
  ExchangeLogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true


  #bucket for storing cloudtrails
  ExchangeCloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ExchangeCloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ExchangeCloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}
          -
            Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${ExchangeCloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  ExchangeCloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  ExchangeCloudTrailLogGroupRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: Cloudtrail role for cloudwatch logs.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        -
          PolicyName: mxc-cw-ct
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogStream
                Resource:
                  Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ExchangeCloudTrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*
              -
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ExchangeCloudTrailLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*

  #cloudtrail for object read/write operations
  ObjectsTrail:
    DependsOn: ExchangeCloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: false
      IsMultiRegionTrail: false
      EventSelectors:
        - DataResources:
            - Type: 'AWS::S3::Object'
              Values:
                - 'arn:aws:s3:::'
          IncludeManagementEvents: true
          ReadWriteType: All
      S3BucketName:
        Ref: ExchangeCloudTrailBucket
      CloudWatchLogsLogGroupArn:
        Fn::GetAtt: ExchangeCloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt: ExchangeCloudTrailLogGroupRole.Arn

  #central eventbus
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-events
