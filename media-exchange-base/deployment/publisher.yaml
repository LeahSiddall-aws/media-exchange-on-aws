AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  Cloudformation template to setup publisher in media exchange.

Outputs:
  PublisherRole:
    Description: Publisher Role to perform List* operations on the bucket
    Value:
      Fn::GetAtt: CrossAccountRole.Arn
  PublisherBucket:
    Description: Publisher Bucket
    Value:
      Ref: PublisherBucket

Metadata: 

  License:
    Description: |
      Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.

      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Deployment Configuration"
        Parameters: 
          - Environment
          - Version
      - 
        Label: 
          default: "Publisher Configuration"
        Parameters: 
          - PublisherAccountId
    

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev
  Version: 
    Type: String
    Description: Release version
    Default: latest

  PublisherAccountId:
    Type: String
    Description: The AWS accountId of the publisher
    ConstraintDescription: AccountId is a 12 digit number
    AllowedPattern: '^\d{12}$'

Resources:

  PublisherBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: mxc-publisher-${AWS::AccountId}-${AWS::Region}-${Environment}-${Version}-${PublisherAccountId}
      
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
        
      
      VersioningConfiguration: 
        Status: Enabled

      # objects must be encrypted with a CMK
      # we do not specify a default encryption configuration 
      # rather enforce it from the bucket policy that 
      # a kms key must be used. 
        
      # Objects must be locked for the duration of the agreement 
      # we do not specify a default lock configuration. But we
      # expect the publishers the lock the objects for the duration
      # applicable for the agreement  
      # we also stop explicit deletes from by a bucket policy.

      #Expire objects after the lifecycle period
      LifecycleConfiguration:
        Rules: 
          - 
            Id: Expire
            Status: Enabled
            ExpirationInDays: 5
          
          - 
            Id: AutoRemove
            Status: Enabled
            NoncurrentVersionExpirationInDays: 10

          - 
            Id: CleanupIncompleteUploads
            Status: Enabled
            AbortIncompleteMultipartUpload: 
              DaysAfterInitiation: 2
            
    
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  
  #bucket policy  
  PublisherBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: 
        Ref: PublisherBucket  
      PolicyDocument: 
        Version: 2012-10-17
        Statement:
          # deny direct deletes, updates are allowed
          - 
            Sid: "DenyDeletes"
            Action: 
              - "s3:DeleteObject"
              - "s3:DeleteObjectVersion"
            Effect: "Deny"
            Resource: 
              - Fn::Sub: arn:aws:s3:::${PublisherBucket}/*
            Principal: "*"

          # TLS only
          - 
            Sid: "RequireTLS"
            Action:
              - "s3:*"
            Effect: "Deny"
            Resource: 
              - Fn::Sub: arn:aws:s3:::${PublisherBucket}/*
            Principal: "*"
            Condition: 
              Bool: 
                aws:SecureTransport: false

          # require KMS for put
          - 
            Sid: "DenyIncorrectEncryptionHeader"
            Action: 
              - "s3:PutObject"
            Effect: "Deny"
            Resource: 
              - Fn::Sub: arn:aws:s3:::${PublisherBucket}/*
            Principal: "*"
            Condition: 
              StringNotEquals: 
                s3:x-amz-server-side-encryption: aws:kms
              
          - 
            Sid: "DenyNoCMKHeader"
            Action: 
              - "s3:PutObject"
            Effect: "Deny"
            Resource: 
              - Fn::Sub: arn:aws:s3:::${PublisherBucket}/*
            Principal: "*"
            Condition:
              'Null':
                s3:x-amz-server-side-encryption-aws-kms-key-id: true
          -
            Sid: "AllowCopyOp"
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetObjectAcl
              - s3:GetObjectVersionAcl
              - s3:GetObjectTagging
              - s3:GetObjectVersionTagging
              - s3:AbortMultipartUpload
              - s3:ListMultipartUploadParts
            Resource:
              Fn::Sub: arn:aws:s3:::${PublisherBucket}/*
            Principal: 
              AWS: 
                - Fn::Sub: arn:aws:iam::${PublisherAccountId}:root
          -
            Sid: "AllowBasicConsole"
            Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:GetBucketVersioning
            Resource:
              Fn::Sub: arn:aws:s3:::${PublisherBucket}
            Principal: 
              AWS: 
                - Fn::Sub: arn:aws:iam::${PublisherAccountId}:root
              
  CrossAccountRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Description: Cross accont role for publisher to list contents of the bucket.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                Ref: PublisherAccountId
            Action: 'sts:AssumeRole'

      Path: /
      Policies:
        -
          PolicyName: mxc-publisher-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:ListBucketMultipartUploads
                Resource:
                  Fn::Sub: arn:aws:s3:::${PublisherBucket}
              - 
                Effect: Allow
                Action: 
                  - events:PutEvents
                Resource: 
                  - Fn::Sub: arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/mxc-events-${AWS::AccountId}-${AWS::Region}-${Environment}-${Version}
  
  