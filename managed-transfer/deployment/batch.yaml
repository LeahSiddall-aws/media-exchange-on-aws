AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Cloudformation template for batch transfer utlity for large files.

Metadata:

  License:
    Description: |
      Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.

      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Deployment Configuration"
        Parameters:
          - Environment
          - ImageName

Parameters:
  Environment:
    Type: String
    Description: Deployment Environment Name
    Default: dev

  ImageName:
    Type: String
    Description: Image Name
    Default: mediaexchange-managed-transfer/aws-cli

Outputs:
  JobQueue:
    Description: Job Queue Arn
    Value:
      Ref: JobQueue
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-jobq

  CopyJobDefinition:
    Description: Copy Job Definition
    Value:
      Ref: CopyJobDefinition
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-copyjob

  CopyCheckSumJobDefinition:
    Description: Copy Job Definition
    Value:
      Ref: CopyAndCheckSumJobDefinition
    Export:
      Name:
        Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-copychecksumjob

Resources:

  CopyJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}
        Vcpus: 1
        Memory: 512
        Command:
          - aws
          - s3
          - cp
          - Ref::Source
          - Ref::Destination
          - --copy-props
          - metadata-directive
        JobRoleArn:
          Fn::GetAtt: JobRole.Arn
      RetryStrategy:
        Attempts: 3

  CopyAndCheckSumJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}
        Vcpus: 2
        Memory: 3584
        Command:
          - copyPlusSHA256.sh
          - Ref::Source
          - Ref::Destination
        JobRoleArn:
          Fn::GetAtt: JobRole.Arn
      RetryStrategy:
        Attempts: 3

  JobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        -
          PolicyName: KMSAndS3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                # minimal permissions mapping to READ ACL
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                  - s3:PutObjectTagging
                  - s3:PutObjectVersionTagging
                  - s3:AbortMultipartUpload
                  - s3:ListMultipartUploadParts
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Resource: '*'

  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
        -
          Order: 1
          ComputeEnvironment:
            Ref: SPOTComputeEnvironment


  SPOTComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole:
        Fn::GetAtt: BatchServiceRole.Arn

      ComputeResources:
        MinvCpus: 0
        DesiredvCpus: 2
        MaxvCpus: 32
        InstanceTypes:
          - optimal

        Type: SPOT
        BidPercentage: 50
        SpotIamFleetRole:
          Ref: SPOTFleetRole

        Subnets:
          Fn::Split:
            - ','
            -
              Fn::ImportValue:
                Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-subnets

        InstanceRole:
          Ref: IAMInstanceProfile
        SecurityGroupIds:
          - Fn::ImportValue:
              Fn::Sub: mxc-${AWS::Region}-${Environment}-managedtransfer-sg

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: batch.amazonaws.com
          Action:
            - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole


  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ECSInstanceRole

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action:
            - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  SPOTFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: spotfleet.amazonaws.com
          Action:
            - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole
